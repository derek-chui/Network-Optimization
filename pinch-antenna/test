clear;
clc;
close all;

K = 2; %num users must be even to pair
M = 6; %num antennas
rng('shuffle');

%params
eta = 3;
P = 10;
N0 = 1e-5;
alpha1 = 0.6;
alpha2 = 0.4;
sigma = 1;
L = 100;
G = 6.0*ones(1,M);
r0 = 40;
gamma = 1.5;

BS = [0, 0];

%can set manually
% A = [ 50  50;
%      -50 -50;
%       50 -50;
%      -50  50];

%or equally spaced in a circle
R = 70; %antenna ring radius
theta = linspace(0, 2*pi, M+1); theta(end) = [];
A = [R*cos(theta(:)), R*sin(theta(:))];

%helpers
rayleigh = @(s) s*sqrt(-2*log(max(1e-12,rand)));
dist = @(X,Y) sqrt(sum((X - Y).^2, 2));
coupling_fun = @(d) 1 ./ (1 + (d./r0).^gamma); %user antenna contribution

noma_pair_rates = @(hw, hs) deal( ...
    log2(1 + (alpha1*P*hw.^2) ./ (alpha2*P*hw.^2 + N0)), ...
    log2(1 + (alpha2*P*hs.^2) ./ N0) );

%rand user loc
U = (rand(K,2)*2 - 1) * L;

%bs to users
dBU = dist(U, repmat(BS,K,1));
z = arrayfun(@(i) rayleigh(sigma), 1:K).';
h_direct = z ./ (max(1e-3, dBU).^(eta/2));

%user antenna coupling
C = zeros(K,M);
for m = 1:M
    C(:,m) = coupling_fun(dist(U, repmat(A(m,:),K,1)));
end

%antenna avtivations
function S = sumrate_for_activation(a, hdir, Cmat, Gvec, pair_fn, rate_fn)
    g_mul = 1 + (Cmat * (Gvec(:).*a(:))); %1 on 0 off
    h_eff = hdir .* g_mul;
    %pairing
    [~, idx] = sort(abs(h_eff), 'ascend');
    h_sorted = h_eff(idx);
    Kloc = numel(h_sorted);
    hw = h_sorted(1:Kloc/2);
    hs = flipud(h_sorted(Kloc/2+1:end));
    [Rw, Rs] = rate_fn(hw, hs);
    S = sum(Rw + Rs);
end

pair_fn = [];
rate_fn = @(hw,hs) noma_pair_rates(hw,hs);
if M <= 6
    %brute force over all activations
    allA = dec2bin(0:(2^M-1)) - '0';
    bestS = -inf; bestA = [];
    for r = 1:size(allA,1)
        a = allA(r,:);
        S = sumrate_for_activation(a, h_direct, C, G, pair_fn, rate_fn);
        if S > bestS
            bestS = S; bestA = a;
        end
    end
else
    %greedy to turn antennas on of they improve sum rate
    a = zeros(1,M); bestS = sumrate_for_activation(a, h_direct, C, G, pair_fn, rate_fn);
    improved = true;
    while improved
        improved = false;
        bestLocalS = bestS; bestLocalA = a;
        for m = 1:M
            a_try = a; a_try(m) = 1 - a_try(m);
            S_try = sumrate_for_activation(a_try, h_direct, C, G, pair_fn, rate_fn);
            if S_try > bestLocalS
                bestLocalS = S_try; bestLocalA = a_try; improved = true;
            end
        end
        a = bestLocalA; bestS = bestLocalS;
    end
    bestA = a;
end

%metrics under best activation
g_mul_best = 1 + (C * (G(:).*bestA(:)));
h_eff_best = h_direct .* g_mul_best;

%pairing under best activation
[~, idxS] = sort(abs(h_eff_best), 'ascend');
h_sorted  = h_eff_best(idxS);
hw = h_sorted(1:K/2);
hs = flipud(h_sorted(K/2+1:end));
[Rw, Rs] = noma_pair_rates(hw, hs);
pair_sumrates = Rw + Rs;

%print
fprintf('K = %d users, M = %d antennas\n', K, M);
fprintf('Best Activation: [%s]\n', sprintf('%d', bestA));

for p = 1:min(5, K/2)
    fprintf('Pair %d: Rw = %.3f, Rs = %.3f, Sum = %.3f\n', p, Rw(p), Rs(p), pair_sumrates(p));
end

fprintf('Total Sum Rate: %.3f b/s/Hz\n', sum(pair_sumrates));
fprintf('Mean Per Pair Sum Rate: %.3f b/s/Hz\n', mean(pair_sumrates));

%plot
figure('Color','w'); hold on; axis equal;
xlim([-L L]); ylim([-L L]);
xline(0,'k-','LineWidth',1); yline(0,'k-','LineWidth',1); box off;

%bs, antennas
plot(BS(1),BS(2),'ks','MarkerFaceColor','k','MarkerSize',9); text(BS(1)+2,BS(2),'BS');
for m = 1:M
    face = bestA(m)*[0 0 0] + [1 1 1];    % filled if active
    plot(A(m,1), A(m,2), '^', 'MarkerSize', 9, 'MarkerFaceColor', face, 'Color', 'k');
    text(A(m,1)+2, A(m,2), sprintf('A%d', m));
end

%users
plot(U(:,1),U(:,2),'o','MarkerFaceColor',[0.2 0.6 1],'Color',[0 0.2 0.6]);
for i = 1:K
    text(U(i,1)+2, U(i,2), sprintf('U%d', i));
end

userColors = lines(K);

%dashed user to bs
for i = 1:K
    plot([BS(1) U(i,1)], [BS(2) U(i,2)], ':', 'Color', userColors(i,:), 'LineWidth', 1.2);
end

%solid user to antenna
for m = 1:M
    if bestA(m)==1
        for i = 1:K
            plot([A(m,1) U(i,1)], [A(m,2) U(i,2)], '-', 'Color', userColors(i,:), 'LineWidth', 1.2);
        end
    end
end

title(sprintf('Best Activation [%s], Total Sum Rate: %.3f b/s/Hz', ...
      sprintf('%d',bestA), sum(pair_sumrates)));
xlabel('x (m)'); ylabel('y (m)'); grid on;
